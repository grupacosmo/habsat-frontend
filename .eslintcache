[{"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\component\\MapSection\\MapSection.js":"1","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\component\\Partner\\Partner.js":"3","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\ContactSection\\ContactSection.js":"4","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\index.js":"5","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\IconsSection\\IconsSection.js":"6","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\MapView\\MapView.js":"7","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\view\\LandingPage\\LandingPage.js":"8","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\PartnersSection\\PartnersSection.js":"9","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\AboutUsSection\\AboutUsSection.js":"10"},{"size":3467,"mtime":1611931029253,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1610218645083,"results":"13","hashOfConfig":"12"},{"size":455,"mtime":1611931095659,"results":"14","hashOfConfig":"12"},{"size":1089,"mtime":1611931029256,"results":"15","hashOfConfig":"12"},{"size":558,"mtime":1610218645073,"results":"16","hashOfConfig":"12"},{"size":1687,"mtime":1611931029258,"results":"17","hashOfConfig":"12"},{"size":606,"mtime":1611931029260,"results":"18","hashOfConfig":"12"},{"size":892,"mtime":1611945081184,"results":"19","hashOfConfig":"12"},{"size":1549,"mtime":1611931095661,"results":"20","hashOfConfig":"12"},{"size":1544,"mtime":1611942915276,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"kldxji",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\component\\MapSection\\MapSection.js",["44"],"import React, {useEffect, useState} from \"react\"\r\nimport 'leaflet/dist/leaflet.css';\r\nimport \"./MapSection.css\"\r\nimport {MapContainer, Marker,Popup, TileLayer, Polyline} from \"react-leaflet\"\r\nimport L from 'leaflet';\r\nimport balloonSharp from '../../assets/images/hot-air-balloon-sharp.svg';\r\nimport GeoJsonData from '../../assets/geoData/GeoJSON.json'\r\n\r\n\r\nconst BalloonIcon = L.icon({\r\n    iconUrl: balloonSharp,\r\n    iconSize: [70, 70], // size of the icon\r\n    iconAnchor: [35, 70], // point of the icon which will correspond to marker's location\r\n    popupAnchor: [0, -65]\r\n});\r\n\r\n/**\r\n *  Ten kod naprawia poprawne wyświetlanie sie ikony markera ma mapie\r\n */\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n/**\r\n * Ustwienie domyślnej ikony\r\n */\r\n// L.Marker.prototype.options.icon = BalloonIcon;\r\n\r\n\r\nfunction MapSection(props) {\r\n    const [polylines, setPolylines] = useState(null)\r\n    const [markers, setMarkers] = useState(null)\r\n    const [polygons, setPolygons] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        parseGeoData();\r\n    }, [])\r\n\r\n    function parseGeoData() {\r\n        const {features} = GeoJsonData\r\n\r\n        const polylinesToMap = features.filter((feature) => {\r\n            return feature.geometry.type === \"LineString\";\r\n        })\r\n\r\n        const markersToMap = features.filter((feature) => {\r\n            return feature.geometry.type === \"Point\";\r\n        })\r\n\r\n        const polygonsToMap = features.filter((feature) => {\r\n            return feature.geometry.type === \"Polygon\";\r\n        })\r\n\r\n        setPolylines(polylinesToMap.map((polyline) => {\r\n            const cords = polyline.geometry.coordinates\r\n\r\n            return cords.map(point => [point[1], point[0]])\r\n        }))\r\n\r\n        const markersCoords = markersToMap.map((marker) => {\r\n            const cords = marker.geometry.coordinates\r\n\r\n            return [cords[1], cords[0]]\r\n        })\r\n\r\n        setPolygons(polygonsToMap.map((polygon) => {\r\n            const cords = polygon.geometry.coordinates[0]\r\n\r\n            return cords.map(point => [point[1], point[0]])\r\n        }))\r\n\r\n        setMarkers(markersCoords.map((point, index) => {\r\n            return (\r\n                <Marker position={point} icon={BalloonIcon} key={index}>\r\n                    <Popup>\r\n                        <p>Height: 1000m,</p>\r\n                        <p>Temp: 10°C,</p>\r\n                        <p>Longitude: {point[0]},</p>\r\n                        <p>Latitude: {point[1]},</p>\r\n                    </Popup>\r\n                </Marker>\r\n            )\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <MapContainer\r\n                center={{lat: 50.08137898440151, lng: 19.994258880615234}}\r\n                zoom={13}\r\n                className=\"map\"\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <Polyline positions={polylines} pathOptions={{color: \"black\"}}/>\r\n                {markers}\r\n            </MapContainer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MapSection;\r\n","C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\component\\Partner\\Partner.js",["45"],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\ContactSection\\ContactSection.js",[],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\index.js",[],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\IconsSection\\IconsSection.js",[],["46","47"],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\MapView\\MapView.js",[],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\view\\LandingPage\\LandingPage.js",["48"],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\PartnersSection\\PartnersSection.js",[],"C:\\Users\\Patryk\\Documents\\code\\habsat-frontend\\src\\container\\AboutUsSection\\AboutUsSection.js",["49"],{"ruleId":"50","severity":1,"message":"51","line":37,"column":12,"nodeType":"52","messageId":"53","endLine":37,"endColumn":20},{"ruleId":"50","severity":1,"message":"54","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":28},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"50","severity":1,"message":"59","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":19},{"ruleId":"50","severity":1,"message":"60","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},"no-unused-vars","'polygons' is assigned a value but never used.","Identifier","unusedVar","'convertLegacyProps' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'HeheSection' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]